{
  "gemini_history_internal": "[{\"role\":\"user\",\"parts\":[{\"text\":\"hullo, how are you\"}]},{\"parts\":[{\"text\":\"Hello! I am functioning as expected and ready to assist you. How can I help you today?\"}],\"role\":\"model\"},{\"role\":\"user\",\"parts\":[{\"text\":\"hi\"}]},{\"parts\":[{\"text\":\"Hi there! How can I help you today?\"}],\"role\":\"model\"},{\"role\":\"user\",\"parts\":[{\"text\":\"list all tools\"}]},{\"parts\":[{\"text\":\"Okay, here are the tools I have available for interacting with the local filesystem:\\n\\n1.  **`read_file(path: str)`**: Reads the complete contents of a single file.\\n2.  **`read_multiple_files(paths: list[str])`**: Reads the contents of multiple files at once.\\n3.  **`write_file(content: str, path: str)`**: Creates a new file or overwrites an existing one with the provided content.\\n4.  **`edit_file(edits: list[EditFileEdits], path: str, dryRun: bool | None = None)`**: Makes specific line-based replacements in a text file.\\n5.  **`create_directory(path: str)`**: Creates a new directory (and any necessary parent directories).\\n6.  **`list_directory(path: str)`**: Lists all files and subdirectories within a specified directory.\\n7.  **`directory_tree(path: str)`**: Shows a recursive tree view of a directory's contents in JSON format.\\n8.  **`move_file(source: str, destination: str)`**: Moves or renames a file or directory.\\n9.  **`search_files(path: str, pattern: str, excludePatterns: list[str] | None = None)`**: Searches for files and directories matching a pattern within a directory and its subdirectories.\\n10. **`get_file_info(path: str)`**: Gets detailed metadata about a specific file or directory (like size, modification date, etc.).\\n11. **`list_allowed_directories()`**: Shows the directories I am permitted to access.\\n\\nLet me know if you'd like to use any of these!\"}],\"role\":\"model\"}]",
  "chat_history_display": [
    {
      "type": "user",
      "text": "hullo, how are you"
    },
    {
      "type": "model",
      "text": "Hello! I am functioning as expected and ready to assist you. How can I help you today?"
    },
    {
      "type": "user",
      "text": "hi"
    },
    {
      "type": "model",
      "text": "Hi there! How can I help you today?"
    },
    {
      "type": "user",
      "text": "list all tools"
    },
    {
      "type": "model",
      "text": "Okay, here are the tools I have available for interacting with the local filesystem:\n\n1.  **`read_file(path: str)`**: Reads the complete contents of a single file.\n2.  **`read_multiple_files(paths: list[str])`**: Reads the contents of multiple files at once.\n3.  **`write_file(content: str, path: str)`**: Creates a new file or overwrites an existing one with the provided content.\n4.  **`edit_file(edits: list[EditFileEdits], path: str, dryRun: bool | None = None)`**: Makes specific line-based replacements in a text file.\n5.  **`create_directory(path: str)`**: Creates a new directory (and any necessary parent directories).\n6.  **`list_directory(path: str)`**: Lists all files and subdirectories within a specified directory.\n7.  **`directory_tree(path: str)`**: Shows a recursive tree view of a directory's contents in JSON format.\n8.  **`move_file(source: str, destination: str)`**: Moves or renames a file or directory.\n9.  **`search_files(path: str, pattern: str, excludePatterns: list[str] | None = None)`**: Searches for files and directories matching a pattern within a directory and its subdirectories.\n10. **`get_file_info(path: str)`**: Gets detailed metadata about a specific file or directory (like size, modification date, etc.).\n11. **`list_allowed_directories()`**: Shows the directories I am permitted to access.\n\nLet me know if you'd like to use any of these!"
    }
  ]
}