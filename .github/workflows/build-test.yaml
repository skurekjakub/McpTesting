# .github/workflows/build-test.yml
name: Build and Test

on: # yamllint disable-line rule:truthy
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, synchronize ] # Trigger when PR opened or commits added

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4 # Checks out your repository code

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        # Specify the Node.js version you want to use
        # e.g., '18.x', '20.x', 'lts/*'
        node-version: '20.x'
        # Optional: Cache npm dependencies globally
        cache: 'npm'

    # Cache node_modules based on package-lock.json
    - name: Load cached node_modules
      id: cache-node-modules
      uses: actions/cache@v4
      with:
        path: node_modules
        # Use package-lock.json (or yarn.lock/pnpm-lock.yaml) for the cache key
        key: node-modules-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          node-modules-${{ runner.os }}-${{ steps.setup-node.outputs.node-version }}-

    - name: Install dependencies
      # Use npm ci for clean installs based on lock file, faster in CI
      # If cache missed, this installs everything
      # If cache hit, this verifies integrity and installs missing packages quickly
      run: npm ci

    - name: Lint code
      # Assumes you have a lint script in your package.json (e.g., "lint": "eslint .")
      run: npm run lint
